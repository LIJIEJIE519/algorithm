/*---ö�� + ������� ----ը����----
 * 1. ը���ܵ���ĵط������ը���ĵ�����
 * 2. ��ö�ٷ������ÿ���ո����ը����ը���ĵ������������������������ܴﵽ�ĵط�
 * 3. ������һ�������������������ǽ���ڽ��˵��ĸ����򶼱�����ͷ��أ�
 * 4. book[][] ����Ƿ��Ѿ�����
 * 
 * 5. ������������ؼ������¸���ô������һ���뵱����ͬ��
 * 		����ģ��
 * 			void dfs(int step)
 * 			{
 * 				�жϱ߽�--return
 * 				����ÿһ�ֿ���  
 * 				for(int i = 1; i <= n; i++)
 * 				{
 * 					������һ��  dfs(step+1);
 *  			}
 *  			����
 *  		}
 * */
public class Ah_4_41 {
	static int N = 13;
	static int M = 13;
	//����Ƿ��Ѿ�����
	int[][] book = new int[N][M];
	//��������
	int[][]	dir = {{0,1},{1,0},{0,-1},{-1,0}};
	int max = 0, X = 0, Y = 0;
	
	//��#��Ϊǽ����H��Ϊ�ո񣬡�G��Ϊ����
	static char[][] a = {{'#','#','#','#','#','#','#','#','#','#','#','#','#'},
			  			 {'#','G','G','H','G','G','G','#','G','G','G','H','#'},
			  			 {'#','#','#','H','#','G','#','G','#','G','#','G','#'},
			  			 {'#','H','H','H','H','H','H','H','#','H','H','G','#'},
			  			 {'#','G','#','H','#','#','#','H','#','G','#','G','#'},
			  			 {'#','G','G','H','G','G','G','H','#','H','G','G','#'},
			  			 {'#','G','#','H','#','G','#','H','#','H','#','H','#'},
			  			 {'#','#','G','H','H','H','G','H','H','H','H','H','#'},
			  			 {'#','G','#','H','#','G','#','#','#','H','#','G','#'},
			  			 {'#','H','H','H','G','#','G','G','G','H','G','G','#'},
			  			 {'#','G','#','H','#','G','#','G','#','H','#','G','#'},
			  			 {'#','G','G','H','G','G','G','#','G','H','G','G','#'},
			  			 {'#','#','#','#','#','#','#','#','#','#','#','#','#'},
			  			};
	
	//���ظõ��ը�����˵���Ŀ��ö�ٷ�
	public int getNum(int i, int j){
		int sum=0,x,y;
		
		//����ͳ��
		x = i;
		y = j;
		while(a[x][y] != '#'){
			if (a[x][y] == 'G') 
				sum++;
			x--;
		}
		//����ͳ��
		x = i;
		y = j;
		while(a[x][y] != '#'){
			if (a[x][y] == 'G') 
				sum++;
			x++;
		}
		//����ͳ��
		x = i;
		y = j;
		while(a[x][y] != '#'){
			if (a[x][y] == 'G') 
				sum++;
			y--;
		}
		//����ͳ��
		x = i;
		y = j;
		while(a[x][y] != '#'){
			if (a[x][y] == 'G') 
				sum++;
			y++;
		}
		return sum;
	}
	
	//�����������
	public void dfs(int x, int y){
		//��øõ���ը���ĵ�����
		int sum = getNum(x, y);
		//����
		if (sum > max) {
			max = sum;
			X = x;
			Y = y;
		}
		
		//ö���ĸ������ȴ��ҿ�ʼ��������
		for(int k = 0; k <= 3; k++){
			int tx = x + dir[k][0];
			int ty = y + dir[k][1];
			//�ж��Ƿ�Խ��
			if (tx > N-1 || tx < 1 || ty > M-1 || ty < 1) 
				continue;
			
			//���Ϊ�ո���δ���
			if (a[tx][ty] == 'H' && book[tx][ty] == 0) {
				book[tx][ty] = 1;				//һ���ǵ��ȱ�ǣ���Ȼ�ݹ�ؽ�����ѭ��
				dfs(tx, ty);					//����һ�������������
			}
		}
		return;									//�������ĸ������򷵻���һ����
	}
	

	public static void main(String[] args) {
		Ah_4_41 ah = new Ah_4_41();
		ah.dfs(3, 3);
		System.out.println("����Ϊ: " + ah.X + " " + ah.Y);
		System.out.println("������Ϊ: " + ah.max);
	}

}
